{"version":3,"sources":["utils/axios.js","views/ListUsers/components/Header/Header.js","views/ListUsers/components/UserCard/UserCard.js","views/ListUsers/ListUsers.js"],"names":["agent","require","Agent","rejectUnauthorized","instance","axios","create","baseURL","responseType","httpsAgent","crossDomain","useStyles","makeStyles","root","Header","props","className","rest","classes","clsx","Grid","alignItems","container","justify","spacing","item","Typography","component","gutterBottom","variant","Button","color","dataTestid","onClick","window","location","reload","theme","display","marginBottom","marginRight","content","padding","flexGrow","justifyContent","breakpoints","down","width","flexWrap","paddingBottom","header","maxWidth","flexBasis","avatar","stats","actions","UserCard","user","Card","CardActionArea","RouterLink","to","pathname","state","CardContent","Avatar","alt","src","picture","thumbnail","name","title","last","gender","results","marginTop","paginate","ListUsers","number","match","params","useState","users","setUsers","progress","setProgress","useEffect","mounted","setTimeout","get","then","response","data","length","CircularProgress","map"],"mappings":"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","file":"static/js/3.ce3b326e.chunk.js","sourcesContent":["import axios from 'axios';\n\n// eslint-disable-next-line no-undef\nconst https = require('https');\n\nconst agent = new https.Agent({\n  rejectUnauthorized: false,\n});\n\nconst instance = axios.create({\n  baseURL: 'https://randomuser.me/',\n  responseType: 'json',\n  httpsAgent: agent,\n  crossDomain: true\n});\n\nexport default instance;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const usersReload = () => {\n    window.location.reload();\n  }\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Users\n          </Typography>\n          <Typography\n            component=\"h1\"\n            variant=\"h3\"\n          >\n            List\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Button\n            color=\"primary\"\n            dataTestid=\"reload-button\"\n            onClick={() => usersReload()}\n            variant=\"contained\"\n          >\n            Reload\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Avatar,\n  Card,\n  CardActionArea,\n  CardContent,\n  Typography  \n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'inline-table',\n    marginBottom: theme.spacing(2),\n    marginRight: '0.5%'\n  },\n  content: {\n    padding: theme.spacing(2),\n    flexGrow: 1,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    [theme.breakpoints.down('sm')]: {\n      width: '100%',\n      flexWrap: 'wrap'\n    },\n    '&:last-child': {\n      paddingBottom: theme.spacing(2)\n    }\n  },\n  header: {\n    maxWidth: '100%',\n    width: 240,\n    display: 'flex',\n    [theme.breakpoints.down('sm')]: {\n      marginBottom: theme.spacing(2),\n      flexBasis: '100%'\n    }\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  stats: {\n    padding: theme.spacing(1),\n    [theme.breakpoints.down('sm')]: {\n      flexBasis: '50%'\n    }\n  },\n  actions: {\n    padding: theme.spacing(1),\n    [theme.breakpoints.down('sm')]: {\n      flexBasis: '50%'\n    }\n  }\n}));\n\nconst UserCard = props => {\n  const { user, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (    \n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}      \n    >\n      <CardActionArea\n        component={RouterLink}\n        to={{pathname:'/profile/', state: {user}}}\n      >\n        <CardContent \n          className={classes.content}\n        >\n          <div className={classes.header}>\n            <Avatar\n              alt=\"Author\"\n              className={classes.avatar}\n              src={user.picture.thumbnail}\n            />\n            <div>\n              {user.name.title} {user.name.last}\n              <Typography variant=\"body2\">\n                {user.gender}\n              </Typography>\n            </div>\n          </div>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n};\n\nUserCard.propTypes = {\n  className: PropTypes.string,\n  user: PropTypes.object.isRequired\n};\n\nexport default UserCard;\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport axios from 'utils/axios';\nimport { Page } from 'components';\nimport { Header, UserCard } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  },\n  paginate: {\n    marginTop: theme.spacing(3),\n    display: 'flex',\n    justifyContent: 'center'\n  }\n}));\n\nconst ListUsers = (props) => {\n  const classes = useStyles();\n  const { match } = props;\n  const { number } = match.params;\n  const [users, setUsers] = useState([]);\n  const [progress, setProgress] = useState(true);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchProjects = () => {\n      if(number){\n        setTimeout(() => axios.get('/api/?results=' + number).then(response => {\n          if (mounted) {\n            setUsers(response.data.results);\n          }\n        }),\n        2000);\n      } else {\n        setTimeout(() => axios.get('/api/?results=10').then(response => {\n          if (mounted) {\n            setUsers(response.data.results);\n          }\n        }),\n        2000);\n      }      \n    };\n\n    fetchProjects();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  useEffect(() => {\n    if (users.length != 0) {\n      setProgress(false);\n    }\n  }, [users]);\n\n  return (\n    <Page \n      className={classes.root}\n      title=\"User List\"\n    >\n      <Header />\n      {progress ? (\n        <CircularProgress />\n      ) : (\n        <div className={classes.results}>\n          <Typography\n            color=\"textSecondary\" \n            gutterBottom \n            variant=\"body2\"\n          >\n            {users.length} Users found.\n          </Typography>\n          {users.map(user => (\n            <UserCard\n              user={user}\n            />\n          ))}\n        </div>\n      )}\n    </Page>\n  );\n};\n\nListUsers.propTypes = {\n  match: PropTypes.object.isRequired\n};\n\nexport default ListUsers;\n"],"sourceRoot":""}