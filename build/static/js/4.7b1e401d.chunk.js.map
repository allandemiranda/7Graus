{"version":3,"sources":["views/Profile/components/Info/Info.js","views/Profile/components/Header/Header.js","views/Profile/components/Login/Login.js","views/Profile/components/Location/Location.js","views/Profile/Profile.js"],"names":["useStyles","makeStyles","theme","root","content","padding","actions","flexDirection","alignItems","marginLeft","buttonIcon","marginRight","spacing","Info","props","user","className","rest","classes","useState","progress","setProgress","useEffect","CircularProgress","Card","clsx","CardHeader","Divider","CardContent","Table","TableBody","TableRow","selected","TableCell","gender","email","phone","cell","nat","cover","position","height","backgroundSize","backgroundRepeat","backgroundPosition","top","left","width","backgroundImage","visibility","changeButton","bottom","right","backgroundColor","colors","blueGrey","color","palette","white","breakpoints","down","addPhotoIcon","container","values","lg","maxWidth","margin","display","flexWrap","avatar","border","details","marginTop","pendingButton","red","personAddIcon","mailIcon","Header","style","Avatar","alt","src","picture","large","Typography","component","variant","name","title","first","last","Login","login","uuid","username","password","MapContainer","center","location","coordinates","latitude","longitude","icon","zoom","TileLayer","attribution","url","Marker","Popup","street","number","city","state","country","postcode","inner","divider","grey","Profile","match","params","tab","setTab","tabs","value","label","to","find","t","Tabs","onChange","event","scrollButtons","map","Tab","Location"],"mappings":"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","file":"static/js/4.7b1e401d.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell\n} from '@material-ui/core';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  actions: {\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    '& > * + *': {\n      marginLeft: 0\n    }\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst Info = props => {\n  const { user, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [progress, setProgress] = useState(true);\n\n  useEffect(()=>{\n    if(user){\n      setProgress(false)\n    }\n  },[user])\n\n  return (\n    <div>\n      {progress ? <CircularProgress/> : \n        <Card\n          {...rest}\n          className={clsx(classes.root, className)}\n        >\n          <CardHeader />\n          <Divider />\n          <CardContent className={classes.content}>\n            <Table>\n              <TableBody>            \n                <TableRow selected >\n                  <TableCell>Gender</TableCell>\n                  <TableCell>{user.gender}</TableCell>\n                </TableRow>\n                <TableRow selected >\n                  <TableCell>E-mail</TableCell>\n                  <TableCell>{user.email}</TableCell>\n                </TableRow>\n                <TableRow selected >\n                  <TableCell>Telephone</TableCell>\n                  <TableCell>{user.phone}</TableCell>\n                </TableRow>\n                <TableRow selected >\n                  <TableCell>Cell</TableCell>\n                  <TableCell>{user.cell}</TableCell>\n                </TableRow>\n                <TableRow selected >\n                  <TableCell>Nationality</TableCell>\n                  <TableCell>{user.nat}</TableCell>\n                </TableRow>                               \n              </TableBody>\n            </Table>\n          </CardContent>   \n        </Card>}\n    </div>\n  );\n};\n\nInfo.propTypes = {\n  className: PropTypes.string,\n  user: PropTypes.object.isRequired,  \n};\n\nexport default Info;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Avatar,\n  Typography,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  cover: {\n    position: 'relative',\n    height: 360,\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center',\n    '&:before': {\n      position: 'absolute',\n      content: '\" \"',\n      top: 0,\n      left: 0,\n      height: '100%',\n      width: '100%',\n      backgroundImage:\n        'linear-gradient(-180deg, rgba(0,0,0,0.00) 58%, rgba(0,0,0,0.32) 100%)'\n    },\n    '&:hover': {\n      '& $changeButton': {\n        visibility: 'visible'\n      }\n    }\n  },\n  changeButton: {\n    visibility: 'hidden',\n    position: 'absolute',\n    bottom: theme.spacing(3),\n    right: theme.spacing(3),\n    backgroundColor: colors.blueGrey[900],\n    color: theme.palette.white,\n    [theme.breakpoints.down('md')]: {\n      top: theme.spacing(3),\n      bottom: 'auto'\n    },\n    '&:hover': {\n      backgroundColor: colors.blueGrey[900]\n    }\n  },\n  addPhotoIcon: {\n    marginRight: theme.spacing(1)\n  },\n  container: {\n    width: theme.breakpoints.values.lg,\n    maxWidth: '100%',\n    padding: theme.spacing(2, 3),\n    margin: '0 auto',\n    position: 'relative',\n    display: 'flex',\n    flexWrap: 'wrap',\n    [theme.breakpoints.down('sm')]: {\n      flexDirection: 'column'\n    }\n  },\n  avatar: {\n    border: `2px solid ${theme.palette.white}`,\n    height: 120,\n    width: 120,\n    top: -60,\n    left: theme.spacing(3),\n    position: 'absolute'\n  },\n  details: {\n    marginLeft: 136\n  },\n  actions: {\n    marginLeft: 'auto',\n    [theme.breakpoints.down('sm')]: {\n      marginTop: theme.spacing(1)\n    },\n    '& > * + *': {\n      marginLeft: theme.spacing(1)\n    }\n  },\n  pendingButton: {\n    color: theme.palette.white,\n    backgroundColor: colors.red[600],\n    '&:hover': {\n      backgroundColor: colors.red[900]\n    }\n  },\n  personAddIcon: {\n    marginRight: theme.spacing(1)\n  },\n  mailIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst Header = props => {\n  const { className, user, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <div\n        className={classes.cover}\n        style={{ backgroundImage: user.gender==='male' ? 'url(/images/covers/cover_2.jpg)' : 'url(/images/covers/cover_1.jpg)'}}\n      />\n      <div className={classes.container}>\n        <Avatar\n          alt=\"Person\"\n          className={classes.avatar}\n          src={user.picture.large}\n        />\n        <div className={classes.details}>          \n          <Typography\n            component=\"h1\"\n            variant=\"h4\"\n          >\n            {user.name.title} {user.name.first} {user.name.last}\n          </Typography>\n        </div>        \n      </div>      \n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string,\n  user: PropTypes.object.isRequired\n};\n\nexport default Header;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell\n} from '@material-ui/core';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  actions: {\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    '& > * + *': {\n      marginLeft: 0\n    }\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst Login = props => {\n  const { user, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [progress, setProgress] = useState(true);\n\n  useEffect(()=>{\n    if(user){\n      setProgress(false)\n    }\n  },[user])\n\n  return (\n    <div>\n      {progress ? <CircularProgress/> : \n        <Card\n          {...rest}\n          className={clsx(classes.root, className)}\n        >\n          <CardHeader />\n          <Divider />\n          <CardContent className={classes.content}>\n            <Table>\n              <TableBody>            \n                <TableRow selected >\n                  <TableCell>ID</TableCell>\n                  <TableCell>{user.login.uuid}</TableCell>\n                </TableRow>\n                <TableRow selected >\n                  <TableCell>User Name</TableCell>\n                  <TableCell>{user.login.username}</TableCell>\n                </TableRow>\n                <TableRow selected >\n                  <TableCell>Password</TableCell>\n                  <TableCell>{user.login.password}</TableCell>\n                </TableRow>                              \n              </TableBody>\n            </Table>\n          </CardContent>   \n        </Card>}\n    </div>\n  );\n};\n\nLogin.propTypes = {\n  className: PropTypes.string,\n  user: PropTypes.object.isRequired,  \n};\n\nexport default Login;","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\n\nimport 'leaflet/dist/leaflet.css';\nimport icon from 'leaflet/dist/images/marker-icon.png';\n\n\nconst Login = props => {\n  const { user } = props;\n\n  const [progress, setProgress] = useState(true);\n\n  useEffect(()=>{\n    if(user){\n      setProgress(false)\n    }\n  },[user])\n\n  return (\n    <div>\n      {progress ? <CircularProgress/> :         \n        <MapContainer \n          center={[user.location.coordinates.latitude, user.location.coordinates.longitude]} \n          icon={icon}          \n          style={{ height: '100vh' }}\n          zoom={13} \n        >\n          <TileLayer\n            attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n          <Marker position={[user.location.coordinates.latitude, user.location.coordinates.longitude]}>\n            <Popup>\n              <p>{user.location.street.name} {user.location.street.number} {user.location.street.name}</p>\n              <p>{user.location.city} {user.location.state} {user.location.country}</p>\n              <p>{user.location.postcode}</p>\n              <p>Latitude: {user.location.coordinates.latitude}</p>\n              <p>Longitude: {user.location.coordinates.longitude}</p>\n            </Popup>\n          </Marker>\n        </MapContainer>\n      }\n    </div>\n  );\n};\n\nLogin.propTypes = {\n  className: PropTypes.string,\n  user: PropTypes.object.isRequired,  \n};\n\nexport default Login;","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Tabs, Tab, Divider, colors } from '@material-ui/core';\n\nimport { Page } from 'components';\nimport { Header, Info, Login, Location } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  inner: {\n    width: theme.breakpoints.values.lg,\n    maxWidth: '100%',\n    margin: '0 auto',\n    padding: theme.spacing(3)\n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  content: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nconst Profile = props => {\n  const { match, location } = props;\n  const classes = useStyles();\n\n  const [tab, setTab] = useState(match.params);  \n\n  const tabs = [\n    { value: 'info', label: 'Information' },\n    { value: 'login', label: 'Login' },\n    { value: 'location', label: 'Location' },\n  ];\n\n  if (!location.state) {\n    return <Redirect to=\"/errors/error-404\" />;\n  }\n\n  const { user } = location.state    \n\n  if (!tabs.find(t => t.value === tab)) {\n    setTab('info');\n  }\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Profile\"\n    >\n      <Header user={user} />\n      <div className={classes.inner}>\n        <Tabs\n          onChange={(event, value) => setTab(value)}\n          scrollButtons=\"auto\"\n          value={tab}\n          variant=\"scrollable\"\n        >\n          {tabs.map(tab => (\n            <Tab\n              key={tab.value}\n              label={tab.label}\n              value={tab.value}\n            />\n          ))}\n        </Tabs>\n        <Divider className={classes.divider} />\n        <div className={classes.content}>\n          {tab === 'info' && <Info user={user} />}\n          {tab === 'login' && <Login user={user} />}\n          {tab === 'location' && <Location user={user} />}\n        </div>\n      </div>\n    </Page>\n  );\n};\n\nProfile.propTypes = {\n  history: PropTypes.object.isRequired,\n  location: PropTypes.object.isRequired,\n  match: PropTypes.object.isRequired  \n};\n\nexport default Profile;\n"],"sourceRoot":""}